{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport SockJS from 'sockjs-client';\nimport { Stomp } from \"@stomp/stompjs\";\nimport FindObject from \"../classes/FindObject\";\nlet stompClient;\nexport default function useStomp(connectionUrl) {\n  _s();\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    // connectionUrl = '/find-snow';\n    const socket = new SockJS(connectionUrl);\n    stompClient = Stomp.over(() => socket);\n    // stompClient = new Client({ brokerURL: connectionUrl });\n\n    stompClient.onConnect = () => {\n      console.log(\"Connected!!\");\n      stompClient.subscribe('/results/snow', function (greeting) {\n        setMessage(JSON.parse(greeting.body).name);\n      });\n    };\n    stompClient.onStompError = function (frame) {\n      // Will be invoked in case of error encountered at Broker\n      // Bad login/passcode typically will cause an error\n      // Complaint brokers will set `message` header with a brief message. Body may contain details.\n      // Compliant brokers will terminate the connection after any error\n      console.log('Broker reported error: ' + frame.headers['message']);\n      console.log('Additional details: ' + frame.body);\n    };\n  }, [connectionUrl]);\n  const send = () => {\n    stompClient.publish({\n      destination: \"/find/snow\",\n      body: JSON.stringify(new FindObject('zip', 74467, 50)),\n      skipContentLengthHeader: true\n    });\n  };\n  return {\n    message,\n    send\n  };\n}\n_s(useStomp, \"3v4ozrfWvlmZ97O5zgyhgDZKC+M=\");","map":{"version":3,"names":["useEffect","useState","SockJS","Stomp","FindObject","stompClient","useStomp","connectionUrl","_s","message","setMessage","socket","over","onConnect","console","log","subscribe","greeting","JSON","parse","body","name","onStompError","frame","headers","send","publish","destination","stringify","skipContentLengthHeader"],"sources":["C:/Users/paulm/Documents/Local Programming/Websites/SnowFinder/frontend/src/hooks/useStomp.ts"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport SockJS from 'sockjs-client';\r\nimport { Stomp, CompatClient } from \"@stomp/stompjs\";\r\nimport FindObject from \"../classes/FindObject\";\r\n\r\nlet stompClient: CompatClient;\r\n\r\nexport default function useStomp(connectionUrl: string) {\r\n    const [message, setMessage] = useState('');\r\n\r\n    useEffect(() => {\r\n        // connectionUrl = '/find-snow';\r\n        const socket = new SockJS(connectionUrl);\r\n        stompClient = Stomp.over(() => socket);\r\n        // stompClient = new Client({ brokerURL: connectionUrl });\r\n\r\n        stompClient.onConnect = () => {\r\n            console.log(\"Connected!!\");\r\n            stompClient.subscribe('/results/snow', function (greeting) {\r\n                setMessage(JSON.parse(greeting.body).name);\r\n            });\r\n        };\r\n        stompClient.onStompError = function (frame) {\r\n            // Will be invoked in case of error encountered at Broker\r\n            // Bad login/passcode typically will cause an error\r\n            // Complaint brokers will set `message` header with a brief message. Body may contain details.\r\n            // Compliant brokers will terminate the connection after any error\r\n            console.log('Broker reported error: ' + frame.headers['message']);\r\n            console.log('Additional details: ' + frame.body);\r\n          };\r\n    }, [connectionUrl]);\r\n\r\n    const send = () => {\r\n        stompClient.publish({ \r\n            destination: \"/find/snow\", \r\n            body: JSON.stringify(new FindObject('zip', 74467, 50)),\r\n            skipContentLengthHeader: true\r\n        });\r\n    };\r\n\r\n    return {\r\n        message,\r\n        send\r\n    }\r\n}"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,MAAM,MAAM,eAAe;AAClC,SAASC,KAAK,QAAsB,gBAAgB;AACpD,OAAOC,UAAU,MAAM,uBAAuB;AAE9C,IAAIC,WAAyB;AAE7B,eAAe,SAASC,QAAQA,CAACC,aAAqB,EAAE;EAAAC,EAAA;EACpD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACZ;IACA,MAAMW,MAAM,GAAG,IAAIT,MAAM,CAACK,aAAa,CAAC;IACxCF,WAAW,GAAGF,KAAK,CAACS,IAAI,CAAC,MAAMD,MAAM,CAAC;IACtC;;IAEAN,WAAW,CAACQ,SAAS,GAAG,MAAM;MAC1BC,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;MAC1BV,WAAW,CAACW,SAAS,CAAC,eAAe,EAAE,UAAUC,QAAQ,EAAE;QACvDP,UAAU,CAACQ,IAAI,CAACC,KAAK,CAACF,QAAQ,CAACG,IAAI,CAAC,CAACC,IAAI,CAAC;MAC9C,CAAC,CAAC;IACN,CAAC;IACDhB,WAAW,CAACiB,YAAY,GAAG,UAAUC,KAAK,EAAE;MACxC;MACA;MACA;MACA;MACAT,OAAO,CAACC,GAAG,CAAC,yBAAyB,GAAGQ,KAAK,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC;MACjEV,OAAO,CAACC,GAAG,CAAC,sBAAsB,GAAGQ,KAAK,CAACH,IAAI,CAAC;IAClD,CAAC;EACP,CAAC,EAAE,CAACb,aAAa,CAAC,CAAC;EAEnB,MAAMkB,IAAI,GAAGA,CAAA,KAAM;IACfpB,WAAW,CAACqB,OAAO,CAAC;MAChBC,WAAW,EAAE,YAAY;MACzBP,IAAI,EAAEF,IAAI,CAACU,SAAS,CAAC,IAAIxB,UAAU,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;MACtDyB,uBAAuB,EAAE;IAC7B,CAAC,CAAC;EACN,CAAC;EAED,OAAO;IACHpB,OAAO;IACPgB;EACJ,CAAC;AACL;AAACjB,EAAA,CArCuBF,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}