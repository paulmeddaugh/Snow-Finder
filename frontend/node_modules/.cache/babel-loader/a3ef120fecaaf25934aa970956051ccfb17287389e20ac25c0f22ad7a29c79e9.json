{"ast":null,"code":"import _slicedToArray from\"C:/Users/paulm/Documents/Local Programming/Websites/SnowFinder/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useEffect,useState}from\"react\";import SockJS from'sockjs-client';import{Stomp}from\"@stomp/stompjs\";import FindObject from\"../classes/FindObject\";var stompClient;export default function useStomp(connectionUrl){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),message=_useState2[0],setMessage=_useState2[1];useEffect(function(){// connectionUrl = '/find-snow';\nvar socket=new SockJS(connectionUrl);stompClient=Stomp.over(function(){return socket;});stompClient.debug=function(){};// stompClient = new Client({ brokerURL: connectionUrl });\nstompClient.onConnect=function(){console.log(\"Connected!!\");stompClient.subscribe('/results/snow',function(greeting){setMessage(JSON.parse(greeting.body).name);});};stompClient.onStompError=function(frame){// Will be invoked in case of error encountered at Broker\n// Bad login/passcode typically will cause an error\n// Complaint brokers will set `message` header with a brief message. Body may contain details.\n// Compliant brokers will terminate the connection after any error\nconsole.log('Broker reported error: '+frame.headers['message']);console.log('Additional details: '+frame.body);};},[connectionUrl]);var send=function send(){stompClient.publish({destination:\"/find/snow\",body:JSON.stringify(new FindObject('zip',74467,50)),skipContentLengthHeader:true});};return{message:message,send:send};}","map":{"version":3,"names":["useEffect","useState","SockJS","Stomp","FindObject","stompClient","useStomp","connectionUrl","_useState","_useState2","_slicedToArray","message","setMessage","socket","over","debug","onConnect","console","log","subscribe","greeting","JSON","parse","body","name","onStompError","frame","headers","send","publish","destination","stringify","skipContentLengthHeader"],"sources":["C:/Users/paulm/Documents/Local Programming/Websites/SnowFinder/frontend/src/hooks/useStomp.ts"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport SockJS from 'sockjs-client';\r\nimport { Stomp, CompatClient } from \"@stomp/stompjs\";\r\nimport FindObject from \"../classes/FindObject\";\r\n\r\nlet stompClient: CompatClient;\r\n\r\nexport default function useStomp(connectionUrl: string) {\r\n    const [message, setMessage] = useState('');\r\n\r\n    useEffect(() => {\r\n        // connectionUrl = '/find-snow';\r\n        const socket = new SockJS(connectionUrl);\r\n        stompClient = Stomp.over(() => socket);\r\n        stompClient.debug = () => {};\r\n        // stompClient = new Client({ brokerURL: connectionUrl });\r\n\r\n        stompClient.onConnect = () => {\r\n            console.log(\"Connected!!\");\r\n            stompClient.subscribe('/results/snow', function (greeting) {\r\n                setMessage(JSON.parse(greeting.body).name);\r\n            });\r\n        };\r\n        stompClient.onStompError = function (frame) {\r\n            // Will be invoked in case of error encountered at Broker\r\n            // Bad login/passcode typically will cause an error\r\n            // Complaint brokers will set `message` header with a brief message. Body may contain details.\r\n            // Compliant brokers will terminate the connection after any error\r\n            console.log('Broker reported error: ' + frame.headers['message']);\r\n            console.log('Additional details: ' + frame.body);\r\n          };\r\n    }, [connectionUrl]);\r\n\r\n    const send = () => {\r\n        stompClient.publish({ \r\n            destination: \"/find/snow\", \r\n            body: JSON.stringify(new FindObject('zip', 74467, 50)),\r\n            skipContentLengthHeader: true\r\n        });\r\n    };\r\n\r\n    return {\r\n        message,\r\n        send\r\n    }\r\n}"],"mappings":"6JAAA,OAASA,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC3C,MAAO,CAAAC,MAAM,KAAM,eAAe,CAClC,OAASC,KAAK,KAAsB,gBAAgB,CACpD,MAAO,CAAAC,UAAU,KAAM,uBAAuB,CAE9C,GAAI,CAAAC,WAAyB,CAE7B,cAAe,SAAS,CAAAC,QAAQA,CAACC,aAAqB,CAAE,CACpD,IAAAC,SAAA,CAA8BP,QAAQ,CAAC,EAAE,CAAC,CAAAQ,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAnCG,OAAO,CAAAF,UAAA,IAAEG,UAAU,CAAAH,UAAA,IAE1BT,SAAS,CAAC,UAAM,CACZ;AACA,GAAM,CAAAa,MAAM,CAAG,GAAI,CAAAX,MAAM,CAACK,aAAa,CAAC,CACxCF,WAAW,CAAGF,KAAK,CAACW,IAAI,CAAC,iBAAM,CAAAD,MAAM,GAAC,CACtCR,WAAW,CAACU,KAAK,CAAG,UAAM,CAAC,CAAC,CAC5B;AAEAV,WAAW,CAACW,SAAS,CAAG,UAAM,CAC1BC,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC,CAC1Bb,WAAW,CAACc,SAAS,CAAC,eAAe,CAAE,SAAUC,QAAQ,CAAE,CACvDR,UAAU,CAACS,IAAI,CAACC,KAAK,CAACF,QAAQ,CAACG,IAAI,CAAC,CAACC,IAAI,CAAC,CAC9C,CAAC,CAAC,CACN,CAAC,CACDnB,WAAW,CAACoB,YAAY,CAAG,SAAUC,KAAK,CAAE,CACxC;AACA;AACA;AACA;AACAT,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAGQ,KAAK,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC,CACjEV,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAGQ,KAAK,CAACH,IAAI,CAAC,CAClD,CAAC,CACP,CAAC,CAAE,CAAChB,aAAa,CAAC,CAAC,CAEnB,GAAM,CAAAqB,IAAI,CAAG,QAAP,CAAAA,IAAIA,CAAA,CAAS,CACfvB,WAAW,CAACwB,OAAO,CAAC,CAChBC,WAAW,CAAE,YAAY,CACzBP,IAAI,CAAEF,IAAI,CAACU,SAAS,CAAC,GAAI,CAAA3B,UAAU,CAAC,KAAK,CAAE,KAAK,CAAE,EAAE,CAAC,CAAC,CACtD4B,uBAAuB,CAAE,IAC7B,CAAC,CAAC,CACN,CAAC,CAED,MAAO,CACHrB,OAAO,CAAPA,OAAO,CACPiB,IAAI,CAAJA,IACJ,CAAC,CACL"},"metadata":{},"sourceType":"module","externalDependencies":[]}