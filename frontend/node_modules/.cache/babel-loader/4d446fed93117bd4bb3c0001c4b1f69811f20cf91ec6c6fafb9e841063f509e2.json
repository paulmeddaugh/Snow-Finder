{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\paulm\\\\Documents\\\\Local Programming\\\\Websites\\\\SnowFinder\\\\frontend\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport './App.css';\nimport useStomp from './hooks/useStomp';\nimport useLoadSnowResults from './hooks/useLoadSnowResults';\nimport FindObject from './classes/FindObject';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SOCKET_URL = 'ws://localhost:8080/snow-finder';\nfunction App() {\n  _s();\n  const {\n    message,\n    send\n  } = useStomp(SOCKET_URL);\n  const {\n    citiesWithSnow,\n    loadedNumber,\n    toLoadNumber,\n    city,\n    otherMessage,\n    reset\n  } = useLoadSnowResults({\n    message\n  });\n  const [zipCode, setZipCode] = useState(0);\n  const [radius, setRadius] = useState(0);\n  const zipCodeRef = useRef(null);\n  const submit = () => {\n    var _zipCodeRef$current;\n    if ((_zipCodeRef$current = zipCodeRef.current) !== null && _zipCodeRef$current !== void 0 && _zipCodeRef$current.checked) {\n      send('/find/snowUsingZip', JSON.stringify(new FindObject('zip', zipCode, radius)));\n    } else {\n      send(\"/find/snowInUS\", null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'body',\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blueSky\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"SnowFinder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tabs d-inline\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"tab invisible\",\n          type: \"radio\",\n          id: \"USCities\",\n          name: \"findType\",\n          value: \"snowInUS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"tabLabel\",\n          htmlFor: \"USCities\",\n          children: \"Major US Cities\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"|\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"tab invisible\",\n          type: \"radio\",\n          id: \"zipCode\",\n          name: \"findType\",\n          value: \"snowUsingZip\",\n          ref: zipCodeRef,\n          checked: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"tabLabel activeTab\",\n          htmlFor: \"zipCode\",\n          children: \"Zip Code Radius\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Search Location:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        type: 'text',\n        placeholder: 'Zip Code',\n        value: zipCode,\n        onChange: e => setZipCode(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        type: 'text',\n        placeholder: 'Radius',\n        value: radius,\n        onChange: e => setRadius(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submit,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"citiesWithSnow\",\n          children: citiesWithSnow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\xA0cities with snow found (\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loaded\",\n          children: loadedNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\xA0out of \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loaded\",\n          children: toLoadNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \")\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"log\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n\n  // return (\n  //     <div className=\"App\">\n  //         <header className=\"App-header\">\n  //             <img src={logo} className=\"App-logo\" alt=\"logo\" />\n  //             <p>\n  //                 {message}\n  //             </p>\n  //             <a\n  //                 className=\"App-link\"\n  //                 onClick={() => send(\"/find/snowInUS\")}\n  //                 target=\"_blank\"\n  //                 rel=\"noopener noreferrer\"\n  //             >\n  //                 Find snow in major US Cities\n  //             </a>\n  //             <a\n  //                 className=\"App-link\"\n  //                 onClick={() => send('/find/snowUsingZip', JSON.stringify(new FindObject('zip', 74467, 50)))}\n  //                 target=\"_blank\"\n  //                 rel=\"noopener noreferrer\"\n  //             >\n  //                 Find snow 50 miles near 74467\n  //             </a>\n  //         </header>\n  //     </div>\n  // );\n}\n_s(App, \"/SVgTq2BxYYcEldggbXF5rCiykg=\", false, function () {\n  return [useStomp, useLoadSnowResults];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useState","useStomp","useLoadSnowResults","FindObject","jsxDEV","_jsxDEV","SOCKET_URL","App","_s","message","send","citiesWithSnow","loadedNumber","toLoadNumber","city","otherMessage","reset","zipCode","setZipCode","radius","setRadius","zipCodeRef","submit","_zipCodeRef$current","current","checked","JSON","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","id","name","value","htmlFor","ref","placeholder","onChange","e","Number","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/paulm/Documents/Local Programming/Websites/SnowFinder/frontend/src/App.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport useStomp from './hooks/useStomp';\nimport useLoadSnowResults from './hooks/useLoadSnowResults';\nimport FindObject from './classes/FindObject';\n\nconst SOCKET_URL = 'ws://localhost:8080/snow-finder';\n\nfunction App() {\n\n    const { message, send } = useStomp(SOCKET_URL);\n    const { citiesWithSnow, loadedNumber, toLoadNumber, city, otherMessage, reset } \n        = useLoadSnowResults({ message });\n\n    const [zipCode, setZipCode] = useState(0);\n    const [radius, setRadius] = useState(0);\n\n    const zipCodeRef = useRef(null);\n\n    const submit = () => {\n        if (zipCodeRef.current?.checked) {\n            send('/find/snowUsingZip', JSON.stringify(new FindObject('zip', zipCode, radius)))\n        } else {\n            send(\"/find/snowInUS\", null);\n        }\n    }\n\n    return (\n        <div className={'body'}>\n            <div className='blueSky'></div>\n            <div className='inputContainer'>\n                <h1>SnowFinder</h1>\n                <div className='tabs d-inline'>\n                <input \n                    className='tab invisible' \n                    type=\"radio\" \n                    id=\"USCities\" \n                    name=\"findType\" \n                    value=\"snowInUS\" \n                />\n                <label className='tabLabel' htmlFor=\"USCities\">Major US Cities</label>\n                <span>|</span>\n                <input \n                    className='tab invisible' \n                    type=\"radio\" \n                    id=\"zipCode\" \n                    name=\"findType\" \n                    value=\"snowUsingZip\" \n                    ref={zipCodeRef}\n                    checked={true}\n                />\n                <label className='tabLabel activeTab' htmlFor=\"zipCode\">Zip Code Radius</label>\n                </div>\n                <label>\n                    Search Location:\n                </label>\n                <input \n                    className='input'\n                    type={'text'} \n                    placeholder={'Zip Code'}\n                    value={zipCode}\n                    onChange={(e) => setZipCode(Number(e.target.value))}\n                />\n                <input \n                    className='input'\n                    type={'text'} \n                    placeholder={'Radius'}\n                    value={radius}\n                    onChange={(e) => setRadius(Number(e.target.value))}\n                />\n                <button onClick={submit}>Search</button>\n                <div className='results'>\n                    <div className='citiesWithSnow'>{citiesWithSnow}</div>\n                    <span>&nbsp;cities with snow found (</span>\n                    <div className='loaded'>{loadedNumber}</div>\n                    <span>&nbsp;out of </span>\n                    <div className='loaded'>{toLoadNumber}</div>\n                    <span>)</span>\n\n                    <div className='log'></div>\n                </div>\n            </div>\n        </div>\n    )\n\n    // return (\n    //     <div className=\"App\">\n    //         <header className=\"App-header\">\n    //             <img src={logo} className=\"App-logo\" alt=\"logo\" />\n    //             <p>\n    //                 {message}\n    //             </p>\n    //             <a\n    //                 className=\"App-link\"\n    //                 onClick={() => send(\"/find/snowInUS\")}\n    //                 target=\"_blank\"\n    //                 rel=\"noopener noreferrer\"\n    //             >\n    //                 Find snow in major US Cities\n    //             </a>\n    //             <a\n    //                 className=\"App-link\"\n    //                 onClick={() => send('/find/snowUsingZip', JSON.stringify(new FindObject('zip', 74467, 50)))}\n    //                 target=\"_blank\"\n    //                 rel=\"noopener noreferrer\"\n    //             >\n    //                 Find snow 50 miles near 74467\n    //             </a>\n    //         </header>\n    //     </div>\n    // );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}