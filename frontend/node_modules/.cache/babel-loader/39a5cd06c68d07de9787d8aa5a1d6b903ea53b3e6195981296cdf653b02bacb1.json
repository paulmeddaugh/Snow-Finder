{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\paulm\\\\Documents\\\\Local Programming\\\\Websites\\\\SnowFinder\\\\frontend\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport SockJsClient from 'react-stomp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SOCKET_URL = 'http://localhost:8080/snow-finder/';\nfunction App() {\n  _s();\n  // const { message, send } = useStomp(SOCKET_URL);\n\n  // return (\n  //     <div className=\"App\">\n  //         <header className=\"App-header\">\n  //             <img src={logo} className=\"App-logo\" alt=\"logo\" />\n  //             <p>\n  //                 {message}\n  //             </p>\n  //             <a\n  //                 className=\"App-link\"\n  //                 onClick={send}\n  //                 target=\"_blank\"\n  //                 rel=\"noopener noreferrer\"\n  //             >\n  //                 Get Wagoner Snow Depth\n  //             </a>\n  //         </header>\n  //     </div>\n  // );\n  const [message, setMessage] = useState('You server message here.');\n  let onConnected = () => {\n    console.log(\"Connected!!\");\n  };\n  let onMessageReceived = msg => {\n    setMessage(msg.message);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SockJsClient, {\n      url: SOCKET_URL,\n      topics: ['/find/snow'],\n      onConnect: onConnected,\n      onDisconnect: console.log(\"Disconnected!\"),\n      onMessage: msg => onMessageReceived(msg),\n      debug: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"2IBTGG3TqNo2oaIJjhFbdysA8Hg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","SockJsClient","jsxDEV","_jsxDEV","SOCKET_URL","App","_s","message","setMessage","onConnected","console","log","onMessageReceived","msg","children","url","topics","onConnect","onDisconnect","onMessage","debug","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/paulm/Documents/Local Programming/Websites/SnowFinder/frontend/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport useStomp from './hooks/useStomp';\nimport SockJsClient from 'react-stomp';\n\nconst SOCKET_URL = 'http://localhost:8080/snow-finder/';\n\nfunction App() {\n\n    // const { message, send } = useStomp(SOCKET_URL);\n\n    // return (\n    //     <div className=\"App\">\n    //         <header className=\"App-header\">\n    //             <img src={logo} className=\"App-logo\" alt=\"logo\" />\n    //             <p>\n    //                 {message}\n    //             </p>\n    //             <a\n    //                 className=\"App-link\"\n    //                 onClick={send}\n    //                 target=\"_blank\"\n    //                 rel=\"noopener noreferrer\"\n    //             >\n    //                 Get Wagoner Snow Depth\n    //             </a>\n    //         </header>\n    //     </div>\n    // );\n    const [message, setMessage] = useState('You server message here.');\n\n    let onConnected = () => {\n        console.log(\"Connected!!\")\n    }\n\n    let onMessageReceived = (msg: any) => {\n        setMessage(msg.message);\n    }\n\n    return (\n        <div>\n            <SockJsClient\n                url={SOCKET_URL}\n                topics={['/find/snow']}\n                onConnect={onConnected}\n                onDisconnect={console.log(\"Disconnected!\")}\n                onMessage={(msg: any) => onMessageReceived(msg)}\n                debug={false}\n            />\n            <div>{message}</div>\n        </div>\n    );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAeC,QAAQ,QAAQ,OAAO;AAElD,OAAO,WAAW;AAElB,OAAOC,YAAY,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,UAAU,GAAG,oCAAoC;AAEvD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEX;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,0BAA0B,CAAC;EAElE,IAAIS,WAAW,GAAGA,CAAA,KAAM;IACpBC,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;EAC9B,CAAC;EAED,IAAIC,iBAAiB,GAAIC,GAAQ,IAAK;IAClCL,UAAU,CAACK,GAAG,CAACN,OAAO,CAAC;EAC3B,CAAC;EAED,oBACIJ,OAAA;IAAAW,QAAA,gBACIX,OAAA,CAACF,YAAY;MACTc,GAAG,EAAEX,UAAW;MAChBY,MAAM,EAAE,CAAC,YAAY,CAAE;MACvBC,SAAS,EAAER,WAAY;MACvBS,YAAY,EAAER,OAAO,CAACC,GAAG,CAAC,eAAe,CAAE;MAC3CQ,SAAS,EAAGN,GAAQ,IAAKD,iBAAiB,CAACC,GAAG,CAAE;MAChDO,KAAK,EAAE;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACf,eACFrB,OAAA;MAAAW,QAAA,EAAMP;IAAO;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAClB;AAEd;AAAClB,EAAA,CA7CQD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AA+CZ,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}