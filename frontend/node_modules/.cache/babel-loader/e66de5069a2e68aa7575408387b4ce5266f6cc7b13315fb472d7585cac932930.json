{"ast":null,"code":"import _classCallCheck from \"C:/Users/paulm/Documents/Local Programming/Websites/SnowFinder/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/paulm/Documents/Local Programming/Websites/SnowFinder/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n/**\n * Supported STOMP versions\n *\n * Part of `@stomp/stompjs`.\n */\nexport var Versions = /*#__PURE__*/function () {\n  /**\n   * Takes an array of versions, typical elements '1.2', '1.1', or '1.0'\n   *\n   * You will be creating an instance of this class if you want to override\n   * supported versions to be declared during STOMP handshake.\n   */\n  function Versions(versions) {\n    _classCallCheck(this, Versions);\n    this.versions = versions;\n  }\n  /**\n   * Used as part of CONNECT STOMP Frame\n   */\n  _createClass(Versions, [{\n    key: \"supportedVersions\",\n    value: function supportedVersions() {\n      return this.versions.join(',');\n    }\n    /**\n     * Used while creating a WebSocket\n     */\n  }, {\n    key: \"protocolVersions\",\n    value: function protocolVersions() {\n      return this.versions.map(function (x) {\n        return \"v\".concat(x.replace('.', ''), \".stomp\");\n      });\n    }\n  }]);\n  return Versions;\n}();\n/**\n * Indicates protocol version 1.0\n */\nVersions.V1_0 = '1.0';\n/**\n * Indicates protocol version 1.1\n */\nVersions.V1_1 = '1.1';\n/**\n * Indicates protocol version 1.2\n */\nVersions.V1_2 = '1.2';\n/**\n * @internal\n */\nVersions.default = new Versions([Versions.V1_2, Versions.V1_1, Versions.V1_0]);","map":{"version":3,"names":["Versions","versions","_classCallCheck","_createClass","key","value","supportedVersions","join","protocolVersions","map","x","concat","replace","V1_0","V1_1","V1_2","default"],"sources":["C:\\Users\\paulm\\Documents\\Local Programming\\Websites\\SnowFinder\\frontend\\node_modules\\@stomp\\stompjs\\src\\versions.ts"],"sourcesContent":["/**\n * Supported STOMP versions\n *\n * Part of `@stomp/stompjs`.\n */\nexport class Versions {\n  /**\n   * Indicates protocol version 1.0\n   */\n  public static V1_0 = '1.0';\n  /**\n   * Indicates protocol version 1.1\n   */\n  public static V1_1 = '1.1';\n  /**\n   * Indicates protocol version 1.2\n   */\n  public static V1_2 = '1.2';\n\n  /**\n   * @internal\n   */\n  public static default = new Versions([\n    Versions.V1_2,\n    Versions.V1_1,\n    Versions.V1_0,\n  ]);\n\n  /**\n   * Takes an array of versions, typical elements '1.2', '1.1', or '1.0'\n   *\n   * You will be creating an instance of this class if you want to override\n   * supported versions to be declared during STOMP handshake.\n   */\n  constructor(public versions: string[]) {}\n\n  /**\n   * Used as part of CONNECT STOMP Frame\n   */\n  public supportedVersions() {\n    return this.versions.join(',');\n  }\n\n  /**\n   * Used while creating a WebSocket\n   */\n  public protocolVersions() {\n    return this.versions.map(x => `v${x.replace('.', '')}.stomp`);\n  }\n}\n"],"mappings":";;AAAA;;;;;AAKA,WAAaA,QAAQ;EAuBnB;;;;;;EAMA,SAAAA,SAAmBC,QAAkB;IAAAC,eAAA,OAAAF,QAAA;IAAlB,KAAAC,QAAQ,GAARA,QAAQ;EAAa;EAExC;;;EAAAE,YAAA,CAAAH,QAAA;IAAAI,GAAA;IAAAC,KAAA,EAGO,SAAAC,kBAAA,EAAiB;MACtB,OAAO,IAAI,CAACL,QAAQ,CAACM,IAAI,CAAC,GAAG,CAAC;IAChC;IAEA;;;EAAA;IAAAH,GAAA;IAAAC,KAAA,EAGO,SAAAG,iBAAA,EAAgB;MACrB,OAAO,IAAI,CAACP,QAAQ,CAACQ,GAAG,CAAC,UAAAC,CAAC;QAAA,WAAAC,MAAA,CAAQD,CAAC,CAACE,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC;MAAA,CAAQ,CAAC;IAC/D;EAAC;EAAA,OAAAZ,QAAA;AAAA;AA1CD;;;AAGcA,QAAA,CAAAa,IAAI,GAAG,KAAK;AAC1B;;;AAGcb,QAAA,CAAAc,IAAI,GAAG,KAAK;AAC1B;;;AAGcd,QAAA,CAAAe,IAAI,GAAG,KAAK;AAE1B;;;AAGcf,QAAA,CAAAgB,OAAO,GAAG,IAAIhB,QAAQ,CAAC,CACnCA,QAAQ,CAACe,IAAI,EACbf,QAAQ,CAACc,IAAI,EACbd,QAAQ,CAACa,IAAI,CACd,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}