{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _sockjsClient = _interopRequireDefault(require(\"sockjs-client\"));\nvar _stompjs = _interopRequireDefault(require(\"stompjs\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _difference = _interopRequireDefault(require(\"lodash/difference\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n/**\n * React component for SockJS-client with STOMP messaging protocol.\n *\n * @version 5.0.0\n * @author [lahsivjar] (https://github.com/lahsivjar)\n * @see {@link https://stomp.github.io/|STOMP}\n * @see {@link https://github.com/sockjs/sockjs-client|StompJS}\n */\nvar SockJsClient = /*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SockJsClient, _React$Component);\n  function SockJsClient(props) {\n    var _this;\n    _classCallCheck(this, SockJsClient);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SockJsClient).call(this, props));\n    _defineProperty(_assertThisInitialized(_this), \"_initStompClient\", function () {\n      // Websocket held by stompjs can be opened only once\n      _this.client = _stompjs[\"default\"].over(new _sockjsClient[\"default\"](_this.props.url, null, _this.props.options));\n      _this.client.heartbeat.outgoing = _this.props.heartbeat;\n      _this.client.heartbeat.incoming = _this.props.heartbeat;\n      if (Object.keys(_this.props).includes('heartbeatIncoming')) {\n        _this.client.heartbeat.incoming = _this.props.heartbeatIncoming;\n      }\n      if (Object.keys(_this.props).includes('heartbeatOutgoing')) {\n        _this.client.heartbeat.outgoing = _this.props.heartbeatOutgoing;\n      }\n      if (!_this.props.debug) {\n        _this.client.debug = function () {};\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_cleanUp\", function () {\n      _this.setState({\n        connected: false\n      });\n      _this.retryCount = 0;\n      _this.subscriptions.clear();\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_log\", function (msg) {\n      if (_this.props.debug) {\n        console.log(msg);\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_subscribe\", function (topic) {\n      if (!_this.subscriptions.has(topic)) {\n        var subscribeHeaders = Object.assign({}, _this.props.subscribeHeaders);\n        var sub = _this.client.subscribe(topic, function (msg) {\n          _this.props.onMessage(_this._processMessage(msg.body), msg.headers.destination);\n        }, subscribeHeaders);\n        _this.subscriptions.set(topic, sub);\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_processMessage\", function (msgBody) {\n      try {\n        return JSON.parse(msgBody);\n      } catch (e) {\n        return msgBody;\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_unsubscribe\", function (topic) {\n      var sub = _this.subscriptions.get(topic);\n      sub.unsubscribe();\n      _this.subscriptions[\"delete\"](topic);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_connect\", function () {\n      _this._initStompClient();\n      _this.client.connect(_this.props.headers, function () {\n        _this.setState({\n          connected: true\n        });\n        _this.props.topics.forEach(function (topic) {\n          _this._subscribe(topic);\n        });\n        _this.props.onConnect();\n      }, function (error) {\n        if (error) {\n          if (Object.keys(_this.props).includes('onConnectFailure')) {\n            _this.props.onConnectFailure(error);\n          } else {\n            _this._log(error.stack);\n          }\n        }\n        if (_this.state.connected) {\n          _this._cleanUp(); // onDisconnect should be called only once per connect\n\n          _this.props.onDisconnect();\n        }\n        if (_this.props.autoReconnect && !_this.state.explicitDisconnect) {\n          _this._timeoutId = setTimeout(_this._connect, _this.props.getRetryInterval(_this.retryCount++));\n        }\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"connect\", function () {\n      _this.setState({\n        explicitDisconnect: false\n      });\n      if (!_this.state.connected) {\n        _this._connect();\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"disconnect\", function () {\n      // On calling disconnect explicitly no effort will be made to reconnect\n      // Clear timeoutId in case the component is trying to reconnect\n      if (_this._timeoutId) {\n        clearTimeout(_this._timeoutId);\n        _this._timeoutId = null;\n      }\n      _this.setState({\n        explicitDisconnect: true\n      });\n      if (_this.state.connected) {\n        _this.subscriptions.forEach(function (subid, topic) {\n          _this._unsubscribe(topic);\n        });\n        _this.client.disconnect(function () {\n          _this._cleanUp();\n          _this.props.onDisconnect();\n          _this._log('Stomp client is successfully disconnected!');\n        });\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"sendMessage\", function (topic, msg) {\n      var optHeaders = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      if (_this.state.connected) {\n        _this.client.send(topic, optHeaders, msg);\n      } else {\n        throw new Error('Send error: SockJsClient is disconnected');\n      }\n    });\n    _this.state = {\n      connected: false,\n      // False if disconnect method is called without a subsequent connect\n      explicitDisconnect: false\n    };\n    _this.subscriptions = new Map();\n    _this.retryCount = 0;\n    return _this;\n  }\n  _createClass(SockJsClient, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._connect();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.disconnect();\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      return false;\n    }\n    /* eslint camelcase: [\"error\", {allow: [\"UNSAFE_componentWillReceiveProps\"]}] */\n  }, {\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      var _this2 = this;\n      if (this.state.connected) {\n        // Subscribe to new topics\n        (0, _difference[\"default\"])(nextProps.topics, this.props.topics).forEach(function (newTopic) {\n          _this2._log('Subscribing to topic: ' + newTopic);\n          _this2._subscribe(newTopic);\n        }); // Unsubscribe from old topics\n\n        (0, _difference[\"default\"])(this.props.topics, nextProps.topics).forEach(function (oldTopic) {\n          _this2._log('Unsubscribing from topic: ' + oldTopic);\n          _this2._unsubscribe(oldTopic);\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return null;\n    }\n  }]);\n  return SockJsClient;\n}(_react[\"default\"].Component);\n_defineProperty(SockJsClient, \"defaultProps\", {\n  onConnect: function onConnect() {},\n  onDisconnect: function onDisconnect() {},\n  getRetryInterval: function getRetryInterval(count) {\n    return 1000 * count;\n  },\n  options: {},\n  headers: {},\n  subscribeHeaders: {},\n  autoReconnect: true,\n  debug: false,\n  heartbeat: 10000\n});\n_defineProperty(SockJsClient, \"propTypes\", {\n  /**\n   * HTTP URL of the endpoint to connect.\n   */\n  url: _propTypes[\"default\"].string.isRequired,\n  /**\n   * Additional options to pass to the underlying SockJS constructor.\n   *\n   * @see [SockJS-options](https://github.com/sockjs/sockjs-client#sockjs-client-api)\n   */\n  options: _propTypes[\"default\"].object,\n  /**\n   * Array of topics to subscribe to.\n   */\n  topics: _propTypes[\"default\"].array.isRequired,\n  /**\n   * Callback after connection is established.\n   */\n  onConnect: _propTypes[\"default\"].func,\n  /**\n   * Callback after connection is lost.\n   */\n  onDisconnect: _propTypes[\"default\"].func,\n  /**\n   * Gets called to find the time interval for next retry. Defaults to a function returing retryCount seconds.\n   *\n   * @param {number} retryCount number of retries for the current disconnect\n   */\n  getRetryInterval: _propTypes[\"default\"].func,\n  /**\n   * Callback when a message is recieved.\n   *\n   * @param {(string|Object)} msg message received from server, if JSON format then object\n   * @param {string} topic the topic on which the message was received\n   */\n  onMessage: _propTypes[\"default\"].func.isRequired,\n  /**\n   * Headers that will be passed to the server or broker with STOMP's connection frame.\n   */\n  headers: _propTypes[\"default\"].object,\n  /**\n   * Headers that will be passed when subscribing to a destination.\n   */\n  subscribeHeaders: _propTypes[\"default\"].object,\n  /**\n   * Should the client try to automatically connect in an event of disconnection.\n   */\n  autoReconnect: _propTypes[\"default\"].bool,\n  /**\n   * Enable debugging mode.\n   */\n  debug: _propTypes[\"default\"].bool,\n  /**\n   * Number of milliseconds to send and expect heartbeat messages.\n   */\n  heartbeat: _propTypes[\"default\"].number,\n  /**\n   * Number of milliseconds to expect heartbeat messages\n   */\n  heartbeatIncoming: _propTypes[\"default\"].number,\n  /**\n   * Number of milliseconds to send heartbeat messages\n   */\n  heartbeatOutgoing: _propTypes[\"default\"].number,\n  /**\n   * Callback if connection could not be established\n   */\n  onConnectFailure: _propTypes[\"default\"].func\n});\nvar _default = SockJsClient;\nexports[\"default\"] = _default;","map":{"version":3,"names":["Object","defineProperty","exports","value","_react","_interopRequireDefault","require","_sockjsClient","_stompjs","_propTypes","_difference","obj","__esModule","_typeof","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","_createClass","protoProps","staticProps","_possibleConstructorReturn","self","call","_assertThisInitialized","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","ReferenceError","_inherits","subClass","superClass","create","_setPrototypeOf","p","_defineProperty","SockJsClient","_React$Component","_this","client","over","url","options","heartbeat","outgoing","incoming","keys","includes","heartbeatIncoming","heartbeatOutgoing","debug","setState","connected","retryCount","subscriptions","clear","msg","console","log","topic","has","subscribeHeaders","assign","sub","subscribe","onMessage","_processMessage","body","headers","destination","set","msgBody","JSON","parse","e","get","unsubscribe","_initStompClient","connect","topics","forEach","_subscribe","onConnect","error","onConnectFailure","_log","stack","state","_cleanUp","onDisconnect","autoReconnect","explicitDisconnect","_timeoutId","setTimeout","_connect","getRetryInterval","clearTimeout","subid","_unsubscribe","disconnect","optHeaders","arguments","undefined","send","Error","Map","componentDidMount","componentWillUnmount","shouldComponentUpdate","nextProps","nextState","UNSAFE_componentWillReceiveProps","_this2","newTopic","oldTopic","render","Component","count","string","isRequired","object","array","func","bool","number","_default"],"sources":["C:/Users/paulm/Documents/Local Programming/Websites/SnowFinder/frontend/node_modules/react-stomp/dist/client.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _sockjsClient = _interopRequireDefault(require(\"sockjs-client\"));\n\nvar _stompjs = _interopRequireDefault(require(\"stompjs\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _difference = _interopRequireDefault(require(\"lodash/difference\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * React component for SockJS-client with STOMP messaging protocol.\n *\n * @version 5.0.0\n * @author [lahsivjar] (https://github.com/lahsivjar)\n * @see {@link https://stomp.github.io/|STOMP}\n * @see {@link https://github.com/sockjs/sockjs-client|StompJS}\n */\nvar SockJsClient =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SockJsClient, _React$Component);\n\n  function SockJsClient(props) {\n    var _this;\n\n    _classCallCheck(this, SockJsClient);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SockJsClient).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"_initStompClient\", function () {\n      // Websocket held by stompjs can be opened only once\n      _this.client = _stompjs[\"default\"].over(new _sockjsClient[\"default\"](_this.props.url, null, _this.props.options));\n      _this.client.heartbeat.outgoing = _this.props.heartbeat;\n      _this.client.heartbeat.incoming = _this.props.heartbeat;\n\n      if (Object.keys(_this.props).includes('heartbeatIncoming')) {\n        _this.client.heartbeat.incoming = _this.props.heartbeatIncoming;\n      }\n\n      if (Object.keys(_this.props).includes('heartbeatOutgoing')) {\n        _this.client.heartbeat.outgoing = _this.props.heartbeatOutgoing;\n      }\n\n      if (!_this.props.debug) {\n        _this.client.debug = function () {};\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cleanUp\", function () {\n      _this.setState({\n        connected: false\n      });\n\n      _this.retryCount = 0;\n\n      _this.subscriptions.clear();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_log\", function (msg) {\n      if (_this.props.debug) {\n        console.log(msg);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_subscribe\", function (topic) {\n      if (!_this.subscriptions.has(topic)) {\n        var subscribeHeaders = Object.assign({}, _this.props.subscribeHeaders);\n\n        var sub = _this.client.subscribe(topic, function (msg) {\n          _this.props.onMessage(_this._processMessage(msg.body), msg.headers.destination);\n        }, subscribeHeaders);\n\n        _this.subscriptions.set(topic, sub);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_processMessage\", function (msgBody) {\n      try {\n        return JSON.parse(msgBody);\n      } catch (e) {\n        return msgBody;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_unsubscribe\", function (topic) {\n      var sub = _this.subscriptions.get(topic);\n\n      sub.unsubscribe();\n\n      _this.subscriptions[\"delete\"](topic);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_connect\", function () {\n      _this._initStompClient();\n\n      _this.client.connect(_this.props.headers, function () {\n        _this.setState({\n          connected: true\n        });\n\n        _this.props.topics.forEach(function (topic) {\n          _this._subscribe(topic);\n        });\n\n        _this.props.onConnect();\n      }, function (error) {\n        if (error) {\n          if (Object.keys(_this.props).includes('onConnectFailure')) {\n            _this.props.onConnectFailure(error);\n          } else {\n            _this._log(error.stack);\n          }\n        }\n\n        if (_this.state.connected) {\n          _this._cleanUp(); // onDisconnect should be called only once per connect\n\n\n          _this.props.onDisconnect();\n        }\n\n        if (_this.props.autoReconnect && !_this.state.explicitDisconnect) {\n          _this._timeoutId = setTimeout(_this._connect, _this.props.getRetryInterval(_this.retryCount++));\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"connect\", function () {\n      _this.setState({\n        explicitDisconnect: false\n      });\n\n      if (!_this.state.connected) {\n        _this._connect();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"disconnect\", function () {\n      // On calling disconnect explicitly no effort will be made to reconnect\n      // Clear timeoutId in case the component is trying to reconnect\n      if (_this._timeoutId) {\n        clearTimeout(_this._timeoutId);\n        _this._timeoutId = null;\n      }\n\n      _this.setState({\n        explicitDisconnect: true\n      });\n\n      if (_this.state.connected) {\n        _this.subscriptions.forEach(function (subid, topic) {\n          _this._unsubscribe(topic);\n        });\n\n        _this.client.disconnect(function () {\n          _this._cleanUp();\n\n          _this.props.onDisconnect();\n\n          _this._log('Stomp client is successfully disconnected!');\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"sendMessage\", function (topic, msg) {\n      var optHeaders = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      if (_this.state.connected) {\n        _this.client.send(topic, optHeaders, msg);\n      } else {\n        throw new Error('Send error: SockJsClient is disconnected');\n      }\n    });\n\n    _this.state = {\n      connected: false,\n      // False if disconnect method is called without a subsequent connect\n      explicitDisconnect: false\n    };\n    _this.subscriptions = new Map();\n    _this.retryCount = 0;\n    return _this;\n  }\n\n  _createClass(SockJsClient, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._connect();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.disconnect();\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      return false;\n    }\n    /* eslint camelcase: [\"error\", {allow: [\"UNSAFE_componentWillReceiveProps\"]}] */\n\n  }, {\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      var _this2 = this;\n\n      if (this.state.connected) {\n        // Subscribe to new topics\n        (0, _difference[\"default\"])(nextProps.topics, this.props.topics).forEach(function (newTopic) {\n          _this2._log('Subscribing to topic: ' + newTopic);\n\n          _this2._subscribe(newTopic);\n        }); // Unsubscribe from old topics\n\n        (0, _difference[\"default\"])(this.props.topics, nextProps.topics).forEach(function (oldTopic) {\n          _this2._log('Unsubscribing from topic: ' + oldTopic);\n\n          _this2._unsubscribe(oldTopic);\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return null;\n    }\n  }]);\n\n  return SockJsClient;\n}(_react[\"default\"].Component);\n\n_defineProperty(SockJsClient, \"defaultProps\", {\n  onConnect: function onConnect() {},\n  onDisconnect: function onDisconnect() {},\n  getRetryInterval: function getRetryInterval(count) {\n    return 1000 * count;\n  },\n  options: {},\n  headers: {},\n  subscribeHeaders: {},\n  autoReconnect: true,\n  debug: false,\n  heartbeat: 10000\n});\n\n_defineProperty(SockJsClient, \"propTypes\", {\n  /**\n   * HTTP URL of the endpoint to connect.\n   */\n  url: _propTypes[\"default\"].string.isRequired,\n\n  /**\n   * Additional options to pass to the underlying SockJS constructor.\n   *\n   * @see [SockJS-options](https://github.com/sockjs/sockjs-client#sockjs-client-api)\n   */\n  options: _propTypes[\"default\"].object,\n\n  /**\n   * Array of topics to subscribe to.\n   */\n  topics: _propTypes[\"default\"].array.isRequired,\n\n  /**\n   * Callback after connection is established.\n   */\n  onConnect: _propTypes[\"default\"].func,\n\n  /**\n   * Callback after connection is lost.\n   */\n  onDisconnect: _propTypes[\"default\"].func,\n\n  /**\n   * Gets called to find the time interval for next retry. Defaults to a function returing retryCount seconds.\n   *\n   * @param {number} retryCount number of retries for the current disconnect\n   */\n  getRetryInterval: _propTypes[\"default\"].func,\n\n  /**\n   * Callback when a message is recieved.\n   *\n   * @param {(string|Object)} msg message received from server, if JSON format then object\n   * @param {string} topic the topic on which the message was received\n   */\n  onMessage: _propTypes[\"default\"].func.isRequired,\n\n  /**\n   * Headers that will be passed to the server or broker with STOMP's connection frame.\n   */\n  headers: _propTypes[\"default\"].object,\n\n  /**\n   * Headers that will be passed when subscribing to a destination.\n   */\n  subscribeHeaders: _propTypes[\"default\"].object,\n\n  /**\n   * Should the client try to automatically connect in an event of disconnection.\n   */\n  autoReconnect: _propTypes[\"default\"].bool,\n\n  /**\n   * Enable debugging mode.\n   */\n  debug: _propTypes[\"default\"].bool,\n\n  /**\n   * Number of milliseconds to send and expect heartbeat messages.\n   */\n  heartbeat: _propTypes[\"default\"].number,\n\n  /**\n   * Number of milliseconds to expect heartbeat messages\n   */\n  heartbeatIncoming: _propTypes[\"default\"].number,\n\n  /**\n   * Number of milliseconds to send heartbeat messages\n   */\n  heartbeatOutgoing: _propTypes[\"default\"].number,\n\n  /**\n   * Callback if connection could not be established\n   */\n  onConnectFailure: _propTypes[\"default\"].func\n});\n\nvar _default = SockJsClient;\nexports[\"default\"] = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}