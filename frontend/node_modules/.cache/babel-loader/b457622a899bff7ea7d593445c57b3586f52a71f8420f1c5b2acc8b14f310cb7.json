{"ast":null,"code":"import _slicedToArray from\"C:/Users/paulm/Documents/Local Programming/Websites/SnowFinder/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useEffect,useState}from\"react\";import CityResponse from\"../classes/CityResponse\";export default function useLoadSnowResults(props){var message=props.message;var _useState=useState(0),_useState2=_slicedToArray(_useState,2),citiesWithSnow=_useState2[0],setCitiesWithSnow=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),loadedNumber=_useState4[0],setLoadedNumber=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),toLoadNumber=_useState6[0],setToLoadNumber=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),log=_useState8[0],setLog=_useState8[1];var _useState9=useState(new CityResponse()),_useState10=_slicedToArray(_useState9,2),city=_useState10[0],setCity=_useState10[1];useEffect(function(){console.log(message);if(message[0]==='X'||message[0]==='O'){var m=message.split(',');var cityProps=new CityResponse(m[0]==='X',m[1],m[2],parseInt(m[3]),parseInt(m[4]),parseInt(m[5]));setCity(cityProps);if(cityProps.hasSnow){setCitiesWithSnow(function(prev){return++prev;});setLog(function(prev){return prev+'<br />'+cityProps.toString();});}setLoadedNumber(function(prev){return++prev;});}else if(message.indexOf(' results')!==-1){setToLoadNumber(Number(message.substring(0,message.indexOf(' '))));}else{setLog(function(prev){return prev+'<br />'+message;});}},[message]);var reset=function reset(){setCitiesWithSnow(0);setLoadedNumber(0);setToLoadNumber(0);setLog('');};return{citiesWithSnow:citiesWithSnow,loadedNumber:loadedNumber,toLoadNumber:toLoadNumber,log:log,city:city,reset:reset};}","map":{"version":3,"names":["useEffect","useState","CityResponse","useLoadSnowResults","props","message","_useState","_useState2","_slicedToArray","citiesWithSnow","setCitiesWithSnow","_useState3","_useState4","loadedNumber","setLoadedNumber","_useState5","_useState6","toLoadNumber","setToLoadNumber","_useState7","_useState8","log","setLog","_useState9","_useState10","city","setCity","console","m","split","cityProps","parseInt","hasSnow","prev","toString","indexOf","Number","substring","reset"],"sources":["C:/Users/paulm/Documents/Local Programming/Websites/SnowFinder/frontend/src/hooks/useParseSnowResults.ts"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport CityResponse from \"../classes/CityResponse\";\r\n\r\nexport default function useLoadSnowResults (props: { message: string }) {\r\n\r\n    const { message } = props;\r\n\r\n    const [citiesWithSnow, setCitiesWithSnow] = useState(0);\r\n    const [loadedNumber, setLoadedNumber] = useState(0);\r\n    const [toLoadNumber, setToLoadNumber] = useState(0);\r\n    const [log, setLog] = useState('');\r\n    const [city, setCity] = useState(new CityResponse());\r\n\r\n    useEffect(() => {\r\n\r\n        console.log(message);\r\n\r\n        if (message[0] === 'X' || message[0] === 'O') {\r\n            const m = message.split(',');\r\n            const cityProps = new CityResponse(\r\n                m[0] === 'X', m[1], m[2], parseInt(m[3]), parseInt(m[4]), parseInt(m[5])\r\n            );\r\n            setCity(cityProps);\r\n\r\n            if (cityProps.hasSnow) {\r\n                setCitiesWithSnow(prev => ++prev);\r\n                setLog(prev => prev + '<br />' + cityProps.toString());\r\n            }\r\n            setLoadedNumber(prev => ++prev);\r\n        } else if (message.indexOf(' results') !== -1) {\r\n            setToLoadNumber(Number(message.substring(0, message.indexOf(' '))));\r\n        } else {\r\n            setLog(prev => prev + '<br />' + message);\r\n        }\r\n    }, [message]);\r\n\r\n    const reset = () => {\r\n        setCitiesWithSnow(0);\r\n        setLoadedNumber(0);\r\n        setToLoadNumber(0);\r\n        setLog('');\r\n    }\r\n\r\n    return {\r\n        citiesWithSnow,\r\n        loadedNumber,\r\n        toLoadNumber,\r\n        log,\r\n        city,\r\n        reset\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}